//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.261.
// 
#pragma warning disable 1591

namespace TrophyUpdater.psnapi {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="psnSoap", Namespace="http://www.psnapi.com.ar/ps3/api")]
    public partial class psn : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback search_jidOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPSNIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLastUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGamesSinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLastestTrophiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrophiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNumberListGamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getListGamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getListTrophiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentAPIVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrophyProgressionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAVGTrophiesGamesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public psn() {
            this.Url = global::TrophyUpdater.Properties.Settings.Default.TrophyUpdater_psnapi_psn;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event search_jidCompletedEventHandler search_jidCompleted;
        
        /// <remarks/>
        public event getPSNIDCompletedEventHandler getPSNIDCompleted;
        
        /// <remarks/>
        public event getLastUpdateCompletedEventHandler getLastUpdateCompleted;
        
        /// <remarks/>
        public event getGamesSinceCompletedEventHandler getGamesSinceCompleted;
        
        /// <remarks/>
        public event getLastestTrophiesCompletedEventHandler getLastestTrophiesCompleted;
        
        /// <remarks/>
        public event getGameCompletedEventHandler getGameCompleted;
        
        /// <remarks/>
        public event getGamesCompletedEventHandler getGamesCompleted;
        
        /// <remarks/>
        public event getTrophiesCompletedEventHandler getTrophiesCompleted;
        
        /// <remarks/>
        public event getNumberListGamesCompletedEventHandler getNumberListGamesCompleted;
        
        /// <remarks/>
        public event getListGamesCompletedEventHandler getListGamesCompleted;
        
        /// <remarks/>
        public event getListTrophiesCompletedEventHandler getListTrophiesCompleted;
        
        /// <remarks/>
        public event GetCurrentAPIVersionCompletedEventHandler GetCurrentAPIVersionCompleted;
        
        /// <remarks/>
        public event GetTrophyProgressionCompletedEventHandler GetTrophyProgressionCompleted;
        
        /// <remarks/>
        public event GetAVGTrophiesGamesCompletedEventHandler GetAVGTrophiesGamesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.psnapi.com.ar/ps3/api/search_jid", RequestNamespace="http://www.psnapi.com.ar/ps3/api", ResponseNamespace="http://www.psnapi.com.ar/ps3/api", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public JID search_jid(string sPSNID) {
            object[] results = this.Invoke("search_jid", new object[] {
                        sPSNID});
            return ((JID)(results[0]));
        }
        
        /// <remarks/>
        public void search_jidAsync(string sPSNID) {
            this.search_jidAsync(sPSNID, null);
        }
        
        /// <remarks/>
        public void search_jidAsync(string sPSNID, object userState) {
            if ((this.search_jidOperationCompleted == null)) {
                this.search_jidOperationCompleted = new System.Threading.SendOrPostCallback(this.Onsearch_jidOperationCompleted);
            }
            this.InvokeAsync("search_jid", new object[] {
                        sPSNID}, this.search_jidOperationCompleted, userState);
        }
        
        private void Onsearch_jidOperationCompleted(object arg) {
            if ((this.search_jidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.search_jidCompleted(this, new search_jidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.psnapi.com.ar/ps3/api/getPSNID", RequestNamespace="http://www.psnapi.com.ar/ps3/api", ResponseNamespace="http://www.psnapi.com.ar/ps3/api", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PSNId getPSNID(string sPSNID) {
            object[] results = this.Invoke("getPSNID", new object[] {
                        sPSNID});
            return ((PSNId)(results[0]));
        }
        
        /// <remarks/>
        public void getPSNIDAsync(string sPSNID) {
            this.getPSNIDAsync(sPSNID, null);
        }
        
        /// <remarks/>
        public void getPSNIDAsync(string sPSNID, object userState) {
            if ((this.getPSNIDOperationCompleted == null)) {
                this.getPSNIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPSNIDOperationCompleted);
            }
            this.InvokeAsync("getPSNID", new object[] {
                        sPSNID}, this.getPSNIDOperationCompleted, userState);
        }
        
        private void OngetPSNIDOperationCompleted(object arg) {
            if ((this.getPSNIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPSNIDCompleted(this, new getPSNIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.psnapi.com.ar/ps3/api/getLastUpdate", RequestNamespace="http://www.psnapi.com.ar/ps3/api", ResponseNamespace="http://www.psnapi.com.ar/ps3/api", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getLastUpdate(string sPSNID) {
            object[] results = this.Invoke("getLastUpdate", new object[] {
                        sPSNID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLastUpdateAsync(string sPSNID) {
            this.getLastUpdateAsync(sPSNID, null);
        }
        
        /// <remarks/>
        public void getLastUpdateAsync(string sPSNID, object userState) {
            if ((this.getLastUpdateOperationCompleted == null)) {
                this.getLastUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLastUpdateOperationCompleted);
            }
            this.InvokeAsync("getLastUpdate", new object[] {
                        sPSNID}, this.getLastUpdateOperationCompleted, userState);
        }
        
        private void OngetLastUpdateOperationCompleted(object arg) {
            if ((this.getLastUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLastUpdateCompleted(this, new getLastUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.psnapi.com.ar/ps3/api/getGamesSince", RequestNamespace="http://www.psnapi.com.ar/ps3/api", ResponseNamespace="http://www.psnapi.com.ar/ps3/api", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Game[] getGamesSince(string sPSNID, string sDate) {
            object[] results = this.Invoke("getGamesSince", new object[] {
                        sPSNID,
                        sDate});
            return ((Game[])(results[0]));
        }
        
        /// <remarks/>
        public void getGamesSinceAsync(string sPSNID, string sDate) {
            this.getGamesSinceAsync(sPSNID, sDate, null);
        }
        
        /// <remarks/>
        public void getGamesSinceAsync(string sPSNID, string sDate, object userState) {
            if ((this.getGamesSinceOperationCompleted == null)) {
                this.getGamesSinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGamesSinceOperationCompleted);
            }
            this.InvokeAsync("getGamesSince", new object[] {
                        sPSNID,
                        sDate}, this.getGamesSinceOperationCompleted, userState);
        }
        
        private void OngetGamesSinceOperationCompleted(object arg) {
            if ((this.getGamesSinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGamesSinceCompleted(this, new getGamesSinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.psnapi.com.ar/ps3/api/getLastestTrophies", RequestNamespace="http://www.psnapi.com.ar/ps3/api", ResponseNamespace="http://www.psnapi.com.ar/ps3/api", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Trophy[] getLastestTrophies(string sPSNID, int iMax, string sSince) {
            object[] results = this.Invoke("getLastestTrophies", new object[] {
                        sPSNID,
                        iMax,
                        sSince});
            return ((Trophy[])(results[0]));
        }
        
        /// <remarks/>
        public void getLastestTrophiesAsync(string sPSNID, int iMax, string sSince) {
            this.getLastestTrophiesAsync(sPSNID, iMax, sSince, null);
        }
        
        /// <remarks/>
        public void getLastestTrophiesAsync(string sPSNID, int iMax, string sSince, object userState) {
            if ((this.getLastestTrophiesOperationCompleted == null)) {
                this.getLastestTrophiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLastestTrophiesOperationCompleted);
            }
            this.InvokeAsync("getLastestTrophies", new object[] {
                        sPSNID,
                        iMax,
                        sSince}, this.getLastestTrophiesOperationCompleted, userState);
        }
        
        private void OngetLastestTrophiesOperationCompleted(object arg) {
            if ((this.getLastestTrophiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLastestTrophiesCompleted(this, new getLastestTrophiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.psnapi.com.ar/ps3/api/getGame", RequestNamespace="http://www.psnapi.com.ar/ps3/api", ResponseNamespace="http://www.psnapi.com.ar/ps3/api", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Game getGame(string sPSNID, string sIdGame) {
            object[] results = this.Invoke("getGame", new object[] {
                        sPSNID,
                        sIdGame});
            return ((Game)(results[0]));
        }
        
        /// <remarks/>
        public void getGameAsync(string sPSNID, string sIdGame) {
            this.getGameAsync(sPSNID, sIdGame, null);
        }
        
        /// <remarks/>
        public void getGameAsync(string sPSNID, string sIdGame, object userState) {
            if ((this.getGameOperationCompleted == null)) {
                this.getGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGameOperationCompleted);
            }
            this.InvokeAsync("getGame", new object[] {
                        sPSNID,
                        sIdGame}, this.getGameOperationCompleted, userState);
        }
        
        private void OngetGameOperationCompleted(object arg) {
            if ((this.getGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGameCompleted(this, new getGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.psnapi.com.ar/ps3/api/getGames", RequestNamespace="http://www.psnapi.com.ar/ps3/api", ResponseNamespace="http://www.psnapi.com.ar/ps3/api", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Game[] getGames(string sPSNID) {
            object[] results = this.Invoke("getGames", new object[] {
                        sPSNID});
            return ((Game[])(results[0]));
        }
        
        /// <remarks/>
        public void getGamesAsync(string sPSNID) {
            this.getGamesAsync(sPSNID, null);
        }
        
        /// <remarks/>
        public void getGamesAsync(string sPSNID, object userState) {
            if ((this.getGamesOperationCompleted == null)) {
                this.getGamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGamesOperationCompleted);
            }
            this.InvokeAsync("getGames", new object[] {
                        sPSNID}, this.getGamesOperationCompleted, userState);
        }
        
        private void OngetGamesOperationCompleted(object arg) {
            if ((this.getGamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGamesCompleted(this, new getGamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.psnapi.com.ar/ps3/api/getTrophies", RequestNamespace="http://www.psnapi.com.ar/ps3/api", ResponseNamespace="http://www.psnapi.com.ar/ps3/api", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Trophy[] getTrophies(string sPSNID, string sGameId) {
            object[] results = this.Invoke("getTrophies", new object[] {
                        sPSNID,
                        sGameId});
            return ((Trophy[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrophiesAsync(string sPSNID, string sGameId) {
            this.getTrophiesAsync(sPSNID, sGameId, null);
        }
        
        /// <remarks/>
        public void getTrophiesAsync(string sPSNID, string sGameId, object userState) {
            if ((this.getTrophiesOperationCompleted == null)) {
                this.getTrophiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrophiesOperationCompleted);
            }
            this.InvokeAsync("getTrophies", new object[] {
                        sPSNID,
                        sGameId}, this.getTrophiesOperationCompleted, userState);
        }
        
        private void OngetTrophiesOperationCompleted(object arg) {
            if ((this.getTrophiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrophiesCompleted(this, new getTrophiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.psnapi.com.ar/ps3/api/getNumberListGames", RequestNamespace="http://www.psnapi.com.ar/ps3/api", ResponseNamespace="http://www.psnapi.com.ar/ps3/api", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getNumberListGames() {
            object[] results = this.Invoke("getNumberListGames", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getNumberListGamesAsync() {
            this.getNumberListGamesAsync(null);
        }
        
        /// <remarks/>
        public void getNumberListGamesAsync(object userState) {
            if ((this.getNumberListGamesOperationCompleted == null)) {
                this.getNumberListGamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNumberListGamesOperationCompleted);
            }
            this.InvokeAsync("getNumberListGames", new object[0], this.getNumberListGamesOperationCompleted, userState);
        }
        
        private void OngetNumberListGamesOperationCompleted(object arg) {
            if ((this.getNumberListGamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNumberListGamesCompleted(this, new getNumberListGamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.psnapi.com.ar/ps3/api/getListGames", RequestNamespace="http://www.psnapi.com.ar/ps3/api", ResponseNamespace="http://www.psnapi.com.ar/ps3/api", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Game[] getListGames(string sGameId) {
            object[] results = this.Invoke("getListGames", new object[] {
                        sGameId});
            return ((Game[])(results[0]));
        }
        
        /// <remarks/>
        public void getListGamesAsync(string sGameId) {
            this.getListGamesAsync(sGameId, null);
        }
        
        /// <remarks/>
        public void getListGamesAsync(string sGameId, object userState) {
            if ((this.getListGamesOperationCompleted == null)) {
                this.getListGamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetListGamesOperationCompleted);
            }
            this.InvokeAsync("getListGames", new object[] {
                        sGameId}, this.getListGamesOperationCompleted, userState);
        }
        
        private void OngetListGamesOperationCompleted(object arg) {
            if ((this.getListGamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getListGamesCompleted(this, new getListGamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.psnapi.com.ar/ps3/api/getListTrophies", RequestNamespace="http://www.psnapi.com.ar/ps3/api", ResponseNamespace="http://www.psnapi.com.ar/ps3/api", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Trophy[] getListTrophies(string sGameId) {
            object[] results = this.Invoke("getListTrophies", new object[] {
                        sGameId});
            return ((Trophy[])(results[0]));
        }
        
        /// <remarks/>
        public void getListTrophiesAsync(string sGameId) {
            this.getListTrophiesAsync(sGameId, null);
        }
        
        /// <remarks/>
        public void getListTrophiesAsync(string sGameId, object userState) {
            if ((this.getListTrophiesOperationCompleted == null)) {
                this.getListTrophiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetListTrophiesOperationCompleted);
            }
            this.InvokeAsync("getListTrophies", new object[] {
                        sGameId}, this.getListTrophiesOperationCompleted, userState);
        }
        
        private void OngetListTrophiesOperationCompleted(object arg) {
            if ((this.getListTrophiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getListTrophiesCompleted(this, new getListTrophiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.psnapi.com.ar/ps3/api/GetCurrentAPIVersion", RequestNamespace="http://www.psnapi.com.ar/ps3/api", ResponseNamespace="http://www.psnapi.com.ar/ps3/api", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentAPIVersion() {
            object[] results = this.Invoke("GetCurrentAPIVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentAPIVersionAsync() {
            this.GetCurrentAPIVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentAPIVersionAsync(object userState) {
            if ((this.GetCurrentAPIVersionOperationCompleted == null)) {
                this.GetCurrentAPIVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentAPIVersionOperationCompleted);
            }
            this.InvokeAsync("GetCurrentAPIVersion", new object[0], this.GetCurrentAPIVersionOperationCompleted, userState);
        }
        
        private void OnGetCurrentAPIVersionOperationCompleted(object arg) {
            if ((this.GetCurrentAPIVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentAPIVersionCompleted(this, new GetCurrentAPIVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.psnapi.com.ar/ps3/api/GetTrophyProgression", RequestNamespace="http://www.psnapi.com.ar/ps3/api", ResponseNamespace="http://www.psnapi.com.ar/ps3/api", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TrophyProgression[] GetTrophyProgression(string sPSNId, string sGameId) {
            object[] results = this.Invoke("GetTrophyProgression", new object[] {
                        sPSNId,
                        sGameId});
            return ((TrophyProgression[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTrophyProgressionAsync(string sPSNId, string sGameId) {
            this.GetTrophyProgressionAsync(sPSNId, sGameId, null);
        }
        
        /// <remarks/>
        public void GetTrophyProgressionAsync(string sPSNId, string sGameId, object userState) {
            if ((this.GetTrophyProgressionOperationCompleted == null)) {
                this.GetTrophyProgressionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrophyProgressionOperationCompleted);
            }
            this.InvokeAsync("GetTrophyProgression", new object[] {
                        sPSNId,
                        sGameId}, this.GetTrophyProgressionOperationCompleted, userState);
        }
        
        private void OnGetTrophyProgressionOperationCompleted(object arg) {
            if ((this.GetTrophyProgressionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrophyProgressionCompleted(this, new GetTrophyProgressionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.psnapi.com.ar/ps3/api/GetAVGTrophiesGames", RequestNamespace="http://www.psnapi.com.ar/ps3/api", ResponseNamespace="http://www.psnapi.com.ar/ps3/api", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Trophies[] GetAVGTrophiesGames() {
            object[] results = this.Invoke("GetAVGTrophiesGames", new object[0]);
            return ((Trophies[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAVGTrophiesGamesAsync() {
            this.GetAVGTrophiesGamesAsync(null);
        }
        
        /// <remarks/>
        public void GetAVGTrophiesGamesAsync(object userState) {
            if ((this.GetAVGTrophiesGamesOperationCompleted == null)) {
                this.GetAVGTrophiesGamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAVGTrophiesGamesOperationCompleted);
            }
            this.InvokeAsync("GetAVGTrophiesGames", new object[0], this.GetAVGTrophiesGamesOperationCompleted, userState);
        }
        
        private void OnGetAVGTrophiesGamesOperationCompleted(object arg) {
            if ((this.GetAVGTrophiesGamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAVGTrophiesGamesCompleted(this, new GetAVGTrophiesGamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.psnapi.com.ar/ps3/api")]
    public partial class JID {
        
        private string idField;
        
        private string sERVERField;
        
        private ExtensionDataObject extensionDataField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string SERVER {
            get {
                return this.sERVERField;
            }
            set {
                this.sERVERField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.psnapi.com.ar/ps3/api")]
    public partial class ExtensionDataObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.psnapi.com.ar/ps3/api")]
    public partial class TrophyProgression {
        
        private System.Nullable<System.DateTime> dateField;
        
        private System.Nullable<int> valueField;
        
        private ExtensionDataObject extensionDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.psnapi.com.ar/ps3/api")]
    public partial class BackColor {
        
        private string rField;
        
        private string gField;
        
        private string bField;
        
        private string aField;
        
        private ExtensionDataObject extensionDataField;
        
        /// <remarks/>
        public string R {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        public string G {
            get {
                return this.gField;
            }
            set {
                this.gField = value;
            }
        }
        
        /// <remarks/>
        public string B {
            get {
                return this.bField;
            }
            set {
                this.bField = value;
            }
        }
        
        /// <remarks/>
        public string A {
            get {
                return this.aField;
            }
            set {
                this.aField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.psnapi.com.ar/ps3/api")]
    public partial class Level {
        
        private int pointsField;
        
        private int floorField;
        
        private int ceilingField;
        
        private int progressField;
        
        private int levelField;
        
        private ExtensionDataObject extensionDataField;
        
        /// <remarks/>
        public int Points {
            get {
                return this.pointsField;
            }
            set {
                this.pointsField = value;
            }
        }
        
        /// <remarks/>
        public int Floor {
            get {
                return this.floorField;
            }
            set {
                this.floorField = value;
            }
        }
        
        /// <remarks/>
        public int Ceiling {
            get {
                return this.ceilingField;
            }
            set {
                this.ceilingField = value;
            }
        }
        
        /// <remarks/>
        public int Progress {
            get {
                return this.progressField;
            }
            set {
                this.progressField = value;
            }
        }
        
        /// <remarks/>
        public int level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.psnapi.com.ar/ps3/api")]
    public partial class Status {
        
        private bool onlineField;
        
        private bool awayField;
        
        private string commentField;
        
        private string modeField;
        
        private string objectIdField;
        
        private string playingField;
        
        private string titleField;
        
        private ExtensionDataObject extensionDataField;
        
        /// <remarks/>
        public bool Online {
            get {
                return this.onlineField;
            }
            set {
                this.onlineField = value;
            }
        }
        
        /// <remarks/>
        public bool Away {
            get {
                return this.awayField;
            }
            set {
                this.awayField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectId {
            get {
                return this.objectIdField;
            }
            set {
                this.objectIdField = value;
            }
        }
        
        /// <remarks/>
        public string Playing {
            get {
                return this.playingField;
            }
            set {
                this.playingField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.psnapi.com.ar/ps3/api")]
    public partial class Ranking {
        
        private int positionField;
        
        private int totalField;
        
        private ExtensionDataObject extensionDataField;
        
        /// <remarks/>
        public int Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public int Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.psnapi.com.ar/ps3/api")]
    public partial class Country {
        
        private System.Nullable<int> idCountryField;
        
        private string cultureField;
        
        private string descripcionField;
        
        private string banderaField;
        
        private ExtensionDataObject extensionDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IdCountry {
            get {
                return this.idCountryField;
            }
            set {
                this.idCountryField = value;
            }
        }
        
        /// <remarks/>
        public string Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public string Descripcion {
            get {
                return this.descripcionField;
            }
            set {
                this.descripcionField = value;
            }
        }
        
        /// <remarks/>
        public string Bandera {
            get {
                return this.banderaField;
            }
            set {
                this.banderaField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.psnapi.com.ar/ps3/api")]
    public partial class Trophy {
        
        private System.Nullable<int> idTrophyField;
        
        private string gameIdField;
        
        private string titleField;
        
        private string imageField;
        
        private string descriptionField;
        
        private System.Nullable<System.DateTime> dateEarnedField;
        
        private string displayDateField;
        
        private string trophyTypeField;
        
        private string fullDescriptionField;
        
        private bool updatedField;
        
        private bool hiddenField;
        
        private string gameTitleField;
        
        private string guideField;
        
        private string titleOnGuideField;
        
        private string platformField;
        
        private ExtensionDataObject extensionDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IdTrophy {
            get {
                return this.idTrophyField;
            }
            set {
                this.idTrophyField = value;
            }
        }
        
        /// <remarks/>
        public string GameId {
            get {
                return this.gameIdField;
            }
            set {
                this.gameIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateEarned {
            get {
                return this.dateEarnedField;
            }
            set {
                this.dateEarnedField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayDate {
            get {
                return this.displayDateField;
            }
            set {
                this.displayDateField = value;
            }
        }
        
        /// <remarks/>
        public string TrophyType {
            get {
                return this.trophyTypeField;
            }
            set {
                this.trophyTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FullDescription {
            get {
                return this.fullDescriptionField;
            }
            set {
                this.fullDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Updated {
            get {
                return this.updatedField;
            }
            set {
                this.updatedField = value;
            }
        }
        
        /// <remarks/>
        public bool Hidden {
            get {
                return this.hiddenField;
            }
            set {
                this.hiddenField = value;
            }
        }
        
        /// <remarks/>
        public string GameTitle {
            get {
                return this.gameTitleField;
            }
            set {
                this.gameTitleField = value;
            }
        }
        
        /// <remarks/>
        public string Guide {
            get {
                return this.guideField;
            }
            set {
                this.guideField = value;
            }
        }
        
        /// <remarks/>
        public string TitleOnGuide {
            get {
                return this.titleOnGuideField;
            }
            set {
                this.titleOnGuideField = value;
            }
        }
        
        /// <remarks/>
        public string Platform {
            get {
                return this.platformField;
            }
            set {
                this.platformField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.psnapi.com.ar/ps3/api")]
    public partial class Game {
        
        private string idField;
        
        private string idGameEuropeField;
        
        private string titleField;
        
        private string imageField;
        
        private string guideField;
        
        private string titleOnGuideField;
        
        private int progressField;
        
        private Trophies trophiesCountField;
        
        private Trophy[] trophiesField;
        
        private int orderPlayedField;
        
        private bool updatedField;
        
        private System.Nullable<System.DateTime> lastUpdatedField;
        
        private System.DateTime releasedField;
        
        private int totalPointsField;
        
        private int totalTrophiesField;
        
        private int userPointsField;
        
        private double starsField;
        
        private int reviewsField;
        
        private string platformField;
        
        private ExtensionDataObject extensionDataField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string IdGameEurope {
            get {
                return this.idGameEuropeField;
            }
            set {
                this.idGameEuropeField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public string Guide {
            get {
                return this.guideField;
            }
            set {
                this.guideField = value;
            }
        }
        
        /// <remarks/>
        public string TitleOnGuide {
            get {
                return this.titleOnGuideField;
            }
            set {
                this.titleOnGuideField = value;
            }
        }
        
        /// <remarks/>
        public int Progress {
            get {
                return this.progressField;
            }
            set {
                this.progressField = value;
            }
        }
        
        /// <remarks/>
        public Trophies TrophiesCount {
            get {
                return this.trophiesCountField;
            }
            set {
                this.trophiesCountField = value;
            }
        }
        
        /// <remarks/>
        public Trophy[] Trophies {
            get {
                return this.trophiesField;
            }
            set {
                this.trophiesField = value;
            }
        }
        
        /// <remarks/>
        public int OrderPlayed {
            get {
                return this.orderPlayedField;
            }
            set {
                this.orderPlayedField = value;
            }
        }
        
        /// <remarks/>
        public bool Updated {
            get {
                return this.updatedField;
            }
            set {
                this.updatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Released {
            get {
                return this.releasedField;
            }
            set {
                this.releasedField = value;
            }
        }
        
        /// <remarks/>
        public int TotalPoints {
            get {
                return this.totalPointsField;
            }
            set {
                this.totalPointsField = value;
            }
        }
        
        /// <remarks/>
        public int TotalTrophies {
            get {
                return this.totalTrophiesField;
            }
            set {
                this.totalTrophiesField = value;
            }
        }
        
        /// <remarks/>
        public int UserPoints {
            get {
                return this.userPointsField;
            }
            set {
                this.userPointsField = value;
            }
        }
        
        /// <remarks/>
        public double Stars {
            get {
                return this.starsField;
            }
            set {
                this.starsField = value;
            }
        }
        
        /// <remarks/>
        public int Reviews {
            get {
                return this.reviewsField;
            }
            set {
                this.reviewsField = value;
            }
        }
        
        /// <remarks/>
        public string Platform {
            get {
                return this.platformField;
            }
            set {
                this.platformField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.psnapi.com.ar/ps3/api")]
    public partial class Trophies {
        
        private int earnedField;
        
        private int totalField;
        
        private int platinumField;
        
        private int goldField;
        
        private int silverField;
        
        private int bronzeField;
        
        private ExtensionDataObject extensionDataField;
        
        /// <remarks/>
        public int Earned {
            get {
                return this.earnedField;
            }
            set {
                this.earnedField = value;
            }
        }
        
        /// <remarks/>
        public int Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        public int Platinum {
            get {
                return this.platinumField;
            }
            set {
                this.platinumField = value;
            }
        }
        
        /// <remarks/>
        public int Gold {
            get {
                return this.goldField;
            }
            set {
                this.goldField = value;
            }
        }
        
        /// <remarks/>
        public int Silver {
            get {
                return this.silverField;
            }
            set {
                this.silverField = value;
            }
        }
        
        /// <remarks/>
        public int Bronze {
            get {
                return this.bronzeField;
            }
            set {
                this.bronzeField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.psnapi.com.ar/ps3/api")]
    public partial class PSNId {
        
        private string idField;
        
        private string avatarSmallField;
        
        private string avatarMediumField;
        
        private string avatarField;
        
        private string aboutMeField;
        
        private int levelField;
        
        private int progressField;
        
        private Trophies trophiesField;
        
        private Game[] gamesField;
        
        private System.Nullable<System.DateTime> updateSignatureField;
        
        private System.DateTime updateDateField;
        
        private System.Nullable<System.DateTime> updateGamesDateField;
        
        private Country countryField;
        
        private Ranking rankingField;
        
        private Ranking countryRankingField;
        
        private Status statusField;
        
        private System.Nullable<System.DateTime> lastSeenField;
        
        private string identityField;
        
        private Level levelDataField;
        
        private bool plusField;
        
        private string jidField;
        
        private string panelUrlField;
        
        private double gameCompletionField;
        
        private string serverField;
        
        private string aliasField;
        
        private BackColor backgroundField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string AvatarSmall {
            get {
                return this.avatarSmallField;
            }
            set {
                this.avatarSmallField = value;
            }
        }
        
        /// <remarks/>
        public string AvatarMedium {
            get {
                return this.avatarMediumField;
            }
            set {
                this.avatarMediumField = value;
            }
        }
        
        /// <remarks/>
        public string Avatar {
            get {
                return this.avatarField;
            }
            set {
                this.avatarField = value;
            }
        }
        
        /// <remarks/>
        public string AboutMe {
            get {
                return this.aboutMeField;
            }
            set {
                this.aboutMeField = value;
            }
        }
        
        /// <remarks/>
        public int Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        public int Progress {
            get {
                return this.progressField;
            }
            set {
                this.progressField = value;
            }
        }
        
        /// <remarks/>
        public Trophies Trophies {
            get {
                return this.trophiesField;
            }
            set {
                this.trophiesField = value;
            }
        }
        
        /// <remarks/>
        public Game[] Games {
            get {
                return this.gamesField;
            }
            set {
                this.gamesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UpdateSignature {
            get {
                return this.updateSignatureField;
            }
            set {
                this.updateSignatureField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UpdateDate {
            get {
                return this.updateDateField;
            }
            set {
                this.updateDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UpdateGamesDate {
            get {
                return this.updateGamesDateField;
            }
            set {
                this.updateGamesDateField = value;
            }
        }
        
        /// <remarks/>
        public Country Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public Ranking Ranking {
            get {
                return this.rankingField;
            }
            set {
                this.rankingField = value;
            }
        }
        
        /// <remarks/>
        public Ranking CountryRanking {
            get {
                return this.countryRankingField;
            }
            set {
                this.countryRankingField = value;
            }
        }
        
        /// <remarks/>
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastSeen {
            get {
                return this.lastSeenField;
            }
            set {
                this.lastSeenField = value;
            }
        }
        
        /// <remarks/>
        public string Identity {
            get {
                return this.identityField;
            }
            set {
                this.identityField = value;
            }
        }
        
        /// <remarks/>
        public Level LevelData {
            get {
                return this.levelDataField;
            }
            set {
                this.levelDataField = value;
            }
        }
        
        /// <remarks/>
        public bool Plus {
            get {
                return this.plusField;
            }
            set {
                this.plusField = value;
            }
        }
        
        /// <remarks/>
        public string jid {
            get {
                return this.jidField;
            }
            set {
                this.jidField = value;
            }
        }
        
        /// <remarks/>
        public string panelUrl {
            get {
                return this.panelUrlField;
            }
            set {
                this.panelUrlField = value;
            }
        }
        
        /// <remarks/>
        public double GameCompletion {
            get {
                return this.gameCompletionField;
            }
            set {
                this.gameCompletionField = value;
            }
        }
        
        /// <remarks/>
        public string server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
        
        /// <remarks/>
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        public BackColor Background {
            get {
                return this.backgroundField;
            }
            set {
                this.backgroundField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void search_jidCompletedEventHandler(object sender, search_jidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class search_jidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal search_jidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JID Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JID)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPSNIDCompletedEventHandler(object sender, getPSNIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPSNIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPSNIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PSNId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PSNId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getLastUpdateCompletedEventHandler(object sender, getLastUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLastUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLastUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getGamesSinceCompletedEventHandler(object sender, getGamesSinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGamesSinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGamesSinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Game[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Game[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getLastestTrophiesCompletedEventHandler(object sender, getLastestTrophiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLastestTrophiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLastestTrophiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Trophy[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Trophy[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getGameCompletedEventHandler(object sender, getGameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Game Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Game)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getGamesCompletedEventHandler(object sender, getGamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Game[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Game[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTrophiesCompletedEventHandler(object sender, getTrophiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrophiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrophiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Trophy[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Trophy[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getNumberListGamesCompletedEventHandler(object sender, getNumberListGamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNumberListGamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNumberListGamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getListGamesCompletedEventHandler(object sender, getListGamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getListGamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getListGamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Game[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Game[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getListTrophiesCompletedEventHandler(object sender, getListTrophiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getListTrophiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getListTrophiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Trophy[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Trophy[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCurrentAPIVersionCompletedEventHandler(object sender, GetCurrentAPIVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentAPIVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentAPIVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTrophyProgressionCompletedEventHandler(object sender, GetTrophyProgressionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrophyProgressionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrophyProgressionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrophyProgression[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrophyProgression[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAVGTrophiesGamesCompletedEventHandler(object sender, GetAVGTrophiesGamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAVGTrophiesGamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAVGTrophiesGamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Trophies[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Trophies[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591